[{"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\index.tsx":"1","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\App.tsx":"2","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\index.ts":"3","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\rootReducer.ts":"4","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\rootSaga.ts":"5","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\actions.ts":"6","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\types.ts":"7","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\sagas.ts":"8","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\index.ts":"9","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\services\\api.ts":"10","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\graphQL\\client.ts":"11","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\layouts\\DashBoardPageLayout.tsx":"12","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\pages\\UserPage.tsx":"13","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\index.ts":"14","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\Content\\index.ts":"15","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageTitle\\index.ts":"16","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageContent\\index.ts":"17","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\Content\\Content.tsx":"18","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageTitle\\PageTitle.tsx":"19","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageContent\\PageContent.tsx":"20","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\pages\\PostPage.tsx":"21"},{"size":177,"mtime":1611910085068,"results":"22","hashOfConfig":"23"},{"size":1831,"mtime":1611927172340,"results":"24","hashOfConfig":"23"},{"size":536,"mtime":1611859494801,"results":"25","hashOfConfig":"23"},{"size":140,"mtime":1611859493781,"results":"26","hashOfConfig":"23"},{"size":344,"mtime":1611926196253,"results":"27","hashOfConfig":"23"},{"size":417,"mtime":1611925684584,"results":"28","hashOfConfig":"23"},{"size":476,"mtime":1611924016327,"results":"29","hashOfConfig":"23"},{"size":704,"mtime":1611926384273,"results":"30","hashOfConfig":"23"},{"size":789,"mtime":1611924631033,"results":"31","hashOfConfig":"23"},{"size":859,"mtime":1611922058990,"results":"32","hashOfConfig":"23"},{"size":455,"mtime":1611868501787,"results":"33","hashOfConfig":"23"},{"size":2400,"mtime":1611927179359,"results":"34","hashOfConfig":"23"},{"size":2579,"mtime":1611928655786,"results":"35","hashOfConfig":"23"},{"size":153,"mtime":1606158764000,"results":"36","hashOfConfig":"23"},{"size":56,"mtime":1606158764000,"results":"37","hashOfConfig":"23"},{"size":62,"mtime":1606158764000,"results":"38","hashOfConfig":"23"},{"size":68,"mtime":1606158764000,"results":"39","hashOfConfig":"23"},{"size":381,"mtime":1606158764000,"results":"40","hashOfConfig":"23"},{"size":420,"mtime":1606158764000,"results":"41","hashOfConfig":"23"},{"size":878,"mtime":1611916002553,"results":"42","hashOfConfig":"23"},{"size":3189,"mtime":1611929442983,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1azkc50",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\index.tsx",[],["92","93"],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\App.tsx",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\rootReducer.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\rootSaga.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\actions.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\types.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\sagas.ts",["94"],"import { call, put } from 'redux-saga/effects';\nimport {api, getTestGQL, getUserGQL} from '../../../services/api';\n\nimport { loadSuccess, loadFailure } from './actions';\n\n\nexport function* load() {\n  try {\n    // const response = yield call(api.get, 'users/diego3g/repos');\n    \n    const response =  yield call(getUserGQL);\n    // console.log(\"hello\");\n    \n    // console.log(typeof(response));\n    yield put(loadSuccess(response));\n  } catch (err) {\n    yield put(loadFailure());\n  }\n}\n\nexport function* loadPost() {\n  try {    \n    const response =  yield call(getTestGQL);\n    console.log(response);\n    \n    yield put(loadSuccess(response));\n  } catch (err) {\n    yield put(loadFailure());\n  }\n}\n\n\n","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\store\\ducks\\repositories\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\services\\api.ts",["95"],"import axios from 'axios';\nimport {gql} from '@apollo/client'\nimport graphQLClient from '../graphQL/client';\nimport _ from 'lodash';\n\nexport const api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport const getTestGQL = async ()=>{\n  return await graphQLClient.request(\ngql`\n    query {\n      getAllPost(q: {\n        limit: 10\n      }) {\n        data {\n    id\n    content\n    images\n    videos\n    commentIds\n    like\n    tags\n    petTags\n    share\n        }\n      }\n    }\n    `\n  ).then((data)=>{\n    return data.getAllPost.data\n  });\n}\n\nexport const getUserGQL = async ()=>{\n  return await graphQLClient.request(\ngql`\nquery {\n  getAllUser(q: {\n    filter: {\n      role: \"EDITOR\"\n    }\n  }) {\n    data {\n\t\t\tid\n\t\t\tname\n      email\n      phone\n      createdAt\n      follows\n    }\n  }\n}`).then((data)=>{\n    return data.getAllUser.data\n  });\n}\n\n","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\graphQL\\client.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\layouts\\DashBoardPageLayout.tsx",["96"],"import React from 'react';\r\n\r\n\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, MessageOutlined , NotificationOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\ntype CommonLayoutProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst  DashboardPageLayout: React.FunctionComponent<CommonLayoutProps> = ({ children }) => { \r\n    \r\n  \r\n  return (\r\n        <DashboardLayout >\r\n      <Layout style={{fontSize: 16 }}>\r\n    <Header className=\"header\">\r\n      <img className=\"logo\" src='petland.png' style={{height:60, padding: '0 50px'}}/>\r\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n    \r\n      </Menu>\r\n    </Header>\r\n    <Content style={{ padding: '0 50px' }}>\r\n      <Breadcrumb style={{ margin: '16px 0'}}>\r\n        <Breadcrumb.Item >\r\n        <h1 style={{padding: '0 30px', fontSize: 30}}>Trang chá»§</h1>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Layout className=\"site-layout-background\" style={{ padding: '0 0' }}>\r\n        <Sider className=\"site-layout-background\" width={200}>\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            style={{ height: '100%' }}\r\n          >\r\n            <Menu.Item key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\"\r\n            >\r\n              <Link to=\"/user\">User</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" icon={<MessageOutlined/>}>\r\n              <Link to=\"/post\">BÃ i viáº¿t</Link>\r\n                </Menu.Item>\r\n            <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n              <Menu.Item key=\"9\">option9</Menu.Item>\r\n              <Menu.Item key=\"10\">option10</Menu.Item>\r\n              <Menu.Item key=\"11\">option11</Menu.Item>\r\n              <Menu.Item key=\"12\">option12</Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider>\r\n        <div style={{ padding: '0 24px', minHeight: 280 }}>\r\n        {children}\r\n        </div>\r\n      </Layout>\r\n    </Content>\r\n    <Footer style={{ textAlign: 'center' }}>PetLand@2021</Footer>\r\n  </Layout>\r\n  </DashboardLayout>\r\n    );\r\n}\r\n\r\nconst DashboardLayout = styled(Layout)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport default DashboardPageLayout","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\pages\\UserPage.tsx",["97","98","99","100","101","102"],"\r\nimport { useEffect } from 'react'\r\n\r\nimport DashboardPageLayout from \"../layouts/DashBoardPageLayout\"\r\nimport {  Content, PageContent } from '../components/common'\r\nimport { EditOutlined, LoadingOutlined } from '@ant-design/icons'\r\nimport { Repository } from \"../store/ducks/repositories/types\"\r\nimport { Breadcrumb, Modal, Table, Tag, Button } from 'antd'\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { ApplicationState } from '../store';\r\nimport * as RepositoriesActions from '../store/ducks/repositories/actions';\r\n\r\n\r\ninterface StateProps {\r\n  repositories: Repository[]\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadRequest(): void\r\n}\r\ntype Props = StateProps & DispatchProps\r\n\r\nconst UserPage: React.FunctionComponent<Props> = props => {\r\n  // Component didmount => fetch API \r\n  useEffect(() => {\r\n    const {loadRequest} = props;\r\n    loadRequest();\r\n  }, [])\r\n  const { repositories } = props;\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: 'NgÃ y ÄÄng kÃ­ tÃ i khoáº£n',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n    },\r\n    {\r\n      title: 'Sá» ngÆ°á»i theo dá»i',\r\n      dataIndex: 'follows',\r\n      key: 'follows',\r\n      render: (follows: string[])=>{return follows?follows.length:0}\r\n    }\r\n  ]\r\n\r\n\r\n\r\n   /**\r\n   * Update this code to show loading spinner when data is being fetched from\r\n   * API\r\n   */\r\n  const loading = false\r\n  \r\n    return (\r\n      <DashboardPageLayout>\r\n        <Content>\r\n        <div className=\"site-layout-background\" style={{}}>\r\n        <PageContent title=\"Danh sÃ¡ch ngÆ°á»i dÃ¹ng\" titleDivider>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <LoadingOutlined />{' '}\r\n            </div>\r\n          )}\r\n          {!loading && <Table dataSource={repositories} columns={columns} />}\r\n        </PageContent>\r\n        </div>\r\n        </Content>\r\n      </DashboardPageLayout>\r\n    )\r\n  }\r\n\r\n  const mapStateToProps = (state: ApplicationState) => ({\r\n    repositories: state.repositories.data,\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators(RepositoriesActions, dispatch);\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(UserPage);\r\n","C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\Content\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageTitle\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageContent\\index.ts",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\Content\\Content.tsx",[],["103","104"],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageTitle\\PageTitle.tsx",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\components\\common\\PageContent\\PageContent.tsx",[],"C:\\Users\\KhaiPham\\Desktop\\myweb\\src\\pages\\PostPage.tsx",["105","106","107","108","109","110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":9,"nodeType":"118","messageId":"119","endLine":2,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":9},{"ruleId":"121","severity":1,"message":"122","line":27,"column":7,"nodeType":"123","endLine":27,"endColumn":87},{"ruleId":"116","severity":1,"message":"124","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":22},{"ruleId":"116","severity":1,"message":"125","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":20},{"ruleId":"116","severity":1,"message":"126","line":8,"column":22,"nodeType":"118","messageId":"119","endLine":8,"endColumn":27},{"ruleId":"116","severity":1,"message":"127","line":8,"column":36,"nodeType":"118","messageId":"119","endLine":8,"endColumn":39},{"ruleId":"116","severity":1,"message":"128","line":8,"column":41,"nodeType":"118","messageId":"119","endLine":8,"endColumn":47},{"ruleId":"129","severity":1,"message":"130","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":8,"suggestions":"132"},{"ruleId":"112","replacedBy":"133"},{"ruleId":"114","replacedBy":"134"},{"ruleId":"116","severity":1,"message":"124","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":22},{"ruleId":"116","severity":1,"message":"125","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":20},{"ruleId":"116","severity":1,"message":"126","line":8,"column":22,"nodeType":"118","messageId":"119","endLine":8,"endColumn":27},{"ruleId":"116","severity":1,"message":"127","line":8,"column":36,"nodeType":"118","messageId":"119","endLine":8,"endColumn":39},{"ruleId":"116","severity":1,"message":"128","line":8,"column":41,"nodeType":"118","messageId":"119","endLine":8,"endColumn":47},{"ruleId":"129","severity":1,"message":"130","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":8,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"122","line":52,"column":13,"nodeType":"123","endLine":52,"endColumn":66},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'_' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'EditOutlined' is defined but never used.","'Breadcrumb' is defined but never used.","'Modal' is defined but never used.","'Tag' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["138"],["136"],["137"],["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [props]",{"range":"143","text":"144"},{"range":"145","text":"144"},[921,923],"[props]",[914,916]]